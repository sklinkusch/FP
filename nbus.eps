%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (nbus.eps)
%%CreationDate: (2017-02-06T11:39:23+01:00)
%%BoundingBox: -0 -0 40 40
%%HiResBoundingBox: 0 0 40 40
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 40 40
userdict begin
DisplayImage
0 0
40 40
12
40 40
1
1
1
8
FFFFFFFFFFFFFFFFFFFFFFFFF563302C2C2C2C2C2C2C2C2C2C3777C4FCFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFED95392C2C2C2C2C2C2C2C2C2C2C2C2C2C2C45F8FFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9342C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C44BBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD34C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C6AFFFFFFFFFFFFFFFFFFFFFFFFFFFF892C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C31B5FFFFFFFFFFFFFFFFFFFFFFFC2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2DA9FFFFFFFFFFFFFFFFFFFF872C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2CB1FFFFFFFFFFFFFFFF9C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C31FFFFFFFFFFFFF644
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C73FFFFFF
FFFF8E2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2CC3FFFFFFFF302C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C4DFCFFFFEA2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C53FFFF9D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2CD6FF502C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C4F4F402C2C2C2C88E32C38E3E3E3E3E3E1D57A2E2C2C2CB3
E3E3402C2C2C72E3E3802C2C2C3592E1FFFFFFF072342C487B2C3AFFFFFFFFFFFFFFFFFF
722C2CC8FFFF432C2C2C7DFFFF8E2C2C33FFFFFFF8F7FFFFFF722C2C592C3AFFFFFF5659
77DFFFFFA62C2CC8FFFF432C2C2C7DFFFF8E2C2C7CFFFFD62C2C4082FF722C2C3A2C3AFF
FFFF2C2C2C7AFFFFA62C2CC8FFFF432C2C2C7DFFFF8E2C2CACFFFF6E2C2C2C2C98682C2C
2C2C3AFFFFFF2C2C2C7DFFFF782C2CC8FFFF432C2C2C7DFFFF8E2C2CB0FFFFB92C2C2C2C
2C2C2C2C2C2C3AFFFFFFFFFFFFFFD53A2C2C2CC8FFFF432C2C2C7DFFFF8E2C2C4AFFFFFF
FFFFFFE42F2C2C2C2C2C3AFFFFFFFFFFFFFFFFDA4E2C2CC8FFFF432C2C2C7DFFFF8E2C2C
2CFFFFFFFFFFFFFFBD302C2C2C2C3AFFFFFFC7C7CDEFFFFFEC2C2CC8FFFF432C2C2C7DFF
FF8E2C2C2C6AD6FFFFFFFFFFFF822C2C392C3AFFFFFF2C2C2C31FFFFFF2C2CC8FFFF442C
2C2C7EFFFF8D2C2C2C2C2C52C3F4FFFFFFCC2C2C7A2C3AFFFFFF2C2C2C2CFFFFFF2C2CAA
FFFF812C2C2CBCFFFF6E2C2CC52C2C2C2C2C38FFFFDE2C2CAB2C3AFFFFFF3A3A467BFFFF
FF2C2C77FFFFE54B2C75FCFFFF3D2C2CCCCF6E342C2E94FFFFAD2C2CE22C3AFFFFFFFFFF
FFFFFFFFE52C2C32EAFFFFFFECFFFFFFFF2C2C2CCCFFFFFAD7F4FFFFFA4E2C45FF4E3AFF
FFFFFFFFFFFFFFED552C2C2C62FFFFFFFFFFFFFFE22C2C2CCCFFFFFFFFFFFFFF752C2C86
FFE92C3A3A3A3A3A332C2C2C2C2C2C2C2C2C3F69795F342C2C2C2C2C2C2C42616D5C352C
2C2C50FFFFFF2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2CB5FFFFFF302C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C4CFCFFFFFFF4442C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C70FFFFFFFFFFFFCC2F2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2CEEFFFFFFFFFFFFFF9A2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C30FFFFFFFFFFFFFFFFFE7E2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2CB0FFFFFFFFFFFFFFFFFFFF822C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2EACFFFFFFFFFFFFFFFFFFFF
FFFFFFA0302C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2CC8FFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFD1492C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C67FFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFF8322C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C42B7FF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3602E2C2C2C2C2C2C2C2C2C2C3574C0
FBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3BF8E4E3C322C405676
99FBFFFFFFFFFFFFFFFFFFFFFFFFFFFF
end
%%PageTrailer
%%Trailer
%%EOF
